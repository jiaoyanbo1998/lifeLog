// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/google/wire"
	"lifelog-grpc/user/grpc"
	"lifelog-grpc/user/ioc"
	"lifelog-grpc/user/repository"
	"lifelog-grpc/user/repository/cache"
	"lifelog-grpc/user/repository/dao"
	"lifelog-grpc/user/service"
)

// Injectors from wire.go:

func InitUserServiceGRPCServer() *grpc.UserServiceGRPCService {
	logger := ioc.InitLogger()
	db := ioc.InitMysql(logger)
	userDao := dao.NewUserDao(db)
	cmdable := ioc.InitRedis()
	userCache := cache.NewUserCache(cmdable)
	userRepository := repository.NewUserRepository(userDao, userCache)
	userService := service.NewUserService(userRepository)
	codeServiceClient := ioc.InitCodeServiceGRPCClient(logger)
	userServiceGRPCService := grpc.NewUserServiceGRPCService(userService, logger, codeServiceClient)
	return userServiceGRPCService
}

// wire.go:

// 用户模块
var userSet = wire.NewSet(service.NewUserService, repository.NewUserRepository, dao.NewUserDao, cache.NewUserCache)

// 第三方模块
var thirdSet = wire.NewSet(ioc.InitMysql, ioc.InitLogger, ioc.InitRedis, ioc.InitCodeServiceGRPCClient)
